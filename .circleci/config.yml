version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0.3

commands:
  print_pipeline_id:
    parameters:
      id: 
        type: string
    steps:
      - run: echo << parameters.id >>


jobs:
  print_greetings:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id:
          id: << pipeline.id >>
      - run: echo HELLO
      - run: echo Darkness my old friend
      - run: echo $_env_name

  upload_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "THIS IS A SAMPLE TEXT" > ~/output.txt  
      - persist_to_workspace:
          root: ~/
          paths: 
            - output.txt  

  download_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt 

  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Configure AWS Access Key ID
          command: aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
      - run:
          name: Configure AWS Secret Access Key
          command: aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
      - run:
          name: Configure AWS Region
          command: aws configure set default.region ${AWS_DEFAULT_REGION}
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
              fingerprints: ["20:f6:dc:1b:94:f2:54:10:e4:92:f4:16:7e:31:a0:e2"] 
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory.txt main.yml
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - run:
          name: Install Curl
          command: apk add --update curl
      - run:
          name: smoke test (ciggarete cleopatra)
          command: |
            URL="https://google.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi




workflows:
  my_workflow:
    jobs:
      - print_greetings
      - upload_file
      - download_file:
          requires:
            - upload_file
      - create_infrastructure
      - configure_infrastructure:
          requires:
            - create_infrastructure
      - smoke_test:
          requires:
            - configure_infrastructure